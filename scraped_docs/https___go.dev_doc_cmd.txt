Command Documentation Common problems companies solve with Go Stories about how and why companies use Go How Go can help keep you secure by default Tips for writing clear, performant, and idiomatic Go code A complete introduction to building software with Go Reference documentation for Go's standard library Learn what's new in each Go release Videos from prior events Meet other local Go developers Learn and network with Go developers from around the world The Go project's official blog. Get help and stay informed from Go There is a suite of programs to build and process Go source code. Instead of being run directly, programs in the suite are usually invoked by thegoprogram. The most common way to run these programs is as a subcommand of the go program, for instance asgo fmt. Run like this, the command operates on complete packages of Go source code, with the go program invoking the underlying binary with arguments appropriate to package-level processing. The programs can also be run as stand-alone binaries, with unmodified arguments, using the gotoolsubcommand, such asgo tool cgo. For most commands this is mainly useful for debugging. Some of the commands, such aspprof, are accessible only through the gotoolsubcommand. The Go installation process also installs an executable calledgofmt, equivalent togo fmt, because it is so often referenced. Click on the links for more documentation, invocation methods, and usage details. This is an abridged list. See thefull command referencefor documentation of the compilers and more. Why GoarrowdropdownPress Enter to activate/deactivate dropdownCase StudiesCommon problems companies solve with GoUse CasesStories about how and why companies use GoSecurityHow Go can help keep you secure by default Case StudiesCommon problems companies solve with Go Use CasesStories about how and why companies use Go SecurityHow Go can help keep you secure by default LearnPress Enter to activate/deactivate dropdown DocsarrowdropdownPress Enter to activate/deactivate dropdownEffective GoTips for writing clear, performant, and idiomatic Go codeGo User ManualA complete introduction to building software with GoStandard libraryReference documentation for Go's standard libraryRelease NotesLearn what's new in each Go release Effective GoTips for writing clear, performant, and idiomatic Go code Go User ManualA complete introduction to building software with Go Standard libraryReference documentation for Go's standard library Release NotesLearn what's new in each Go release PackagesPress Enter to activate/deactivate dropdown CommunityarrowdropdownPress Enter to activate/deactivate dropdownRecorded TalksVideos from prior eventsMeetupsopeninnewMeet other local Go developersConferencesopeninnewLearn and network with Go developers from around the worldGo blogThe Go project's official blog.Go projectGet help and stay informed from GoGet connected Recorded TalksVideos from prior events MeetupsopeninnewMeet other local Go developers ConferencesopeninnewLearn and network with Go developers from around the world Go blogThe Go project's official blog. Go projectGet help and stay informed from Go Get connected Why GonavigatenextnavigatebeforeWhy GoCase StudiesUse CasesSecurity Case Studies Use Cases Security Learn DocsnavigatenextnavigatebeforeDocsEffective GoGo User ManualStandard libraryRelease Notes Effective Go Go User Manual Standard library Release Notes Packages CommunitynavigatenextnavigatebeforeCommunityRecorded TalksMeetupsopeninnewConferencesopeninnewGo blogGo projectGet connected Recorded Talks Meetupsopeninnew Conferencesopeninnew Go blog Go project Get connected Documentation Command Documentation Copyright Terms of Service Privacy Policy Report an Issue go fmt tool go tool cgo pprof gofmt go "go test -coverprofile" +-------+--+--------------------------------------------------------------------------------------------------------+ | Name | | Synopsis | +-------+--+--------------------------------------------------------------------------------------------------------+ | go | | Thegoprogram manages Go source code and runs the other | | | | commands listed here. | | | | See the command docs for usage | | | | details. | +-------+--+--------------------------------------------------------------------------------------------------------+ | cgo | | Cgo enables the creation of Go packages that call C code. | +-------+--+--------------------------------------------------------------------------------------------------------+ | cover | | Cover is a program for creating and analyzing the coverage profiles | | | | generated by"go test -coverprofile". | +-------+--+--------------------------------------------------------------------------------------------------------+ | fix | | Fix finds Go programs that use old features of the language and libraries | | | | and rewrites them to use newer ones. | +-------+--+--------------------------------------------------------------------------------------------------------+ | fmt | | Fmt formats Go packages, it is also available as an independentgofmtcommand with more general options. | +-------+--+--------------------------------------------------------------------------------------------------------+ | doc | | Doc extracts and generates documentation for Go packages. | +-------+--+--------------------------------------------------------------------------------------------------------+ | vet | | Vet examines Go source code and reports suspicious constructs, such as Printf | | | | calls whose arguments do not align with the format string. | +-------+--+--------------------------------------------------------------------------------------------------------+ ðŸ’¡ Why Go navigatenext navigatebeforeWhy Go Case Studies Use Cases Security Learn Docs navigatenext navigatebeforeDocs Effective Go Go User Manual Standard library Release Notes Packages Community navigatenext navigatebeforeCommunity Recorded Talks Meetups openinnew Conferences openinnew Go blog Go project Get connected