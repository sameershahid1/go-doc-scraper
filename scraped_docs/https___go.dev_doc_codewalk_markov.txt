Codewalk: Generating arbitrary text: a Markov chain algorithm Common problems companies solve with Go Stories about how and why companies use Go How Go can help keep you secure by default Tips for writing clear, performant, and idiomatic Go code A complete introduction to building software with Go Reference documentation for Go's standard library Learn what's new in each Go release Videos from prior events Meet other local Go developers Learn and network with Go developers from around the world The Go project's official blog. Get help and stay informed from Go Why GoarrowdropdownPress Enter to activate/deactivate dropdownCase StudiesCommon problems companies solve with GoUse CasesStories about how and why companies use GoSecurityHow Go can help keep you secure by default Case StudiesCommon problems companies solve with Go Use CasesStories about how and why companies use Go SecurityHow Go can help keep you secure by default LearnPress Enter to activate/deactivate dropdown DocsarrowdropdownPress Enter to activate/deactivate dropdownEffective GoTips for writing clear, performant, and idiomatic Go codeGo User ManualA complete introduction to building software with GoStandard libraryReference documentation for Go's standard libraryRelease NotesLearn what's new in each Go release Effective GoTips for writing clear, performant, and idiomatic Go code Go User ManualA complete introduction to building software with Go Standard libraryReference documentation for Go's standard library Release NotesLearn what's new in each Go release PackagesPress Enter to activate/deactivate dropdown CommunityarrowdropdownPress Enter to activate/deactivate dropdownRecorded TalksVideos from prior eventsMeetupsopeninnewMeet other local Go developersConferencesopeninnewLearn and network with Go developers from around the worldGo blogThe Go project's official blog.Go projectGet help and stay informed from GoGet connected Recorded TalksVideos from prior events MeetupsopeninnewMeet other local Go developers ConferencesopeninnewLearn and network with Go developers from around the world Go blogThe Go project's official blog. Go projectGet help and stay informed from Go Get connected Why GonavigatenextnavigatebeforeWhy GoCase StudiesUse CasesSecurity Case Studies Use Cases Security Learn DocsnavigatenextnavigatebeforeDocsEffective GoGo User ManualStandard libraryRelease Notes Effective Go Go User Manual Standard library Release Notes Packages CommunitynavigatenextnavigatebeforeCommunityRecorded TalksMeetupsopeninnewConferencesopeninnewGo blogGo projectGet connected Recorded Talks Meetupsopeninnew Conferencesopeninnew Go blog Go project Get connected Copyright Terms of Service Privacy Policy Report an Issue go map[string][]string{ " ": {"I"}, " I": {"am"}, "I am": {"a", "not"}, "a free": {"man!"}, "am a": {"free"}, "am not": {"a"}, "a number!": {"I"}, "number! I": {"am"}, "not a": {"number!"}, }  go Prefix Map key []string{"", ""} " " []string{"", "I"} " I" []string{"I", "am"} "I am"  go p == Prefix{"I", "am"} s == "not"  go p == Prefix{"am", "not"}  go p := Prefix{"I", "am"} copy(p, p[1:]) // p == Prefix{"am", "am"}  go // suffix == "not" p[len(p)-1] = suffix // p == Prefix{"am", "not"}  go $ go build markov.go  go $ echo "a man a plan a canal panama" \ | ./markov -prefix=1 a plan a man a plan a canal panama  go $ ./markov -words=10 < $GOROOT/README This is the source code repository for the Go source $ ./markov -prefix=1 -words=10 < $GOROOT/README This is the go directory (the one containing this README). $ ./markov -prefix=1 -words=10 < $GOROOT/README This is the variable if you have just untarred a  map[string][]string string []string Chain NewChain chain make prefixLen main Prefix String Build io.Reader fmt.Fscan Reader Read io.EOF Readers bufio.NewReader p s Fscan break p.String append nil Shift copy word Generate words n p.String() choices len(choices) rand.Intn next strings.Join flag flag.Int Int flag.Parse rand prefix os.Stdin text fmt.Println io.Writer Fprint ðŸ’¡ Why Go navigatenext navigatebeforeWhy Go Case Studies Use Cases Security Learn Docs navigatenext navigatebeforeDocs Effective Go Go User Manual Standard library Release Notes Packages Community navigatenext navigatebeforeCommunity Recorded Talks Meetups openinnew Conferences openinnew Go blog Go project Get connected